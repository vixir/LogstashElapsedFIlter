input { 
    file {
        path => "C:/Users/DELL/Documents/logstash-6.3.0/bin/solution.log"
        start_position => "beginning"
    }
}

filter {
        if [message] =~ /^(?!.*(is finished|is inserted)).*$/ {
			drop{}
		} else if [message] =~ /is finished/ {
		grok{
			match => {
					"message" => "%{TIMESTAMP_ISO8601:receiveDateTime} \[%{DATA:className}\] \[%{DATA:messageId}\] is finished"
				}
				add_tag => [ "taskTerminated" ]
		}
		date {
				match => ["receiveDateTime", "yyyy-MM-dd HH:mm:ss.SSS"]
				#target => "receiveDateTime"
		    }
		}else if [message] =~ /is inserted/ {
		grok{
			match => {
					"message" => "%{TIMESTAMP_ISO8601:fromDateTime} \[%{DATA:className}\] \[%{DATA:messageId}\] is inserted"
				}
			add_tag => [ "taskStarted" ]
		}
		date {
				match => ["fromDateTime", "yyyy-MM-dd HH:mm:ss.SSS"]
				#target => "fromDateTime"
		}
		}
		elapsed {
    		start_tag => "taskStarted"
    		end_tag => "taskTerminated"
    		unique_id_field => "messageId"
			timeout => "400"
			new_event_on_match => false
    	}
}

output {
		elasticsearch { hosts => ["localhost:9200"] 
		index => "project"
		document_id => "%{messageId}"}
		stdout { codec => rubydebug }
}